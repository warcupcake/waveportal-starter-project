{"version":3,"sources":["assets/marie.png","MessageBar.js","ConnectWalletButton.js","App.js","index.js"],"names":["module","exports","MessageBar","className","placeholder","onChange","this","props","handleChange","React","Component","ConnectWalletButton","currentAccount","onClick","connectWallet","App","useState","setCurrentAccount","currentWaveCount","setWaveCount","allWaves","setAllWaves","message","setMessage","balance","setBalance","remainingTokens","setRemaining","contractAddress","contractABI","abi","tokenContractABI","tokenAbi","checkIfWalletIsConnected","a","window","ethereum","console","log","request","method","accounts","length","account","getTotalWaves","getAllWaves","getTokenBalance","alert","provider","ethers","providers","Web3Provider","signer","getSigner","wavePortalContract","Contract","count","toNumber","waves","wavesCleaned","map","wave","address","waver","timestamp","Date","addy","tokenContract","balanceOf","_balance","utils","formatEther","_remainingBalance","gasLimit","waveTxn","hash","wait","useEffect","style","backgroundColor","marginTop","marginBottom","padding","event","target","value","src","marie","alt","index","key","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c2ad1a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marie.ffe07f7f.png\";","import React from 'react';\n\nclass MessageBar extends React.Component {\n   render() {\n       return(\n        <div className = \"messageBar\">\n            <input placeholder='Enter Message Here' onChange={this.props.handleChange}/>\n        </div>\n       )\n   } \n}\n\nexport default MessageBar;","import React from 'react';\n\nclass ConnectWalletButton extends React.Component{\n    render() {\n        return(\n            <div>\n                {!this.props.currentAccount && (\n                    <button className=\"connectButton\" onClick={this.props.connectWallet}>\n                        Connect Wallet\n                    </button>\n                )}\n            </div>\n            )\n    }\n}\n\nexport default ConnectWalletButton;","import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport './App.css';\nimport abi from './utils/WavePortal.json';\nimport tokenAbi from './utils/MARI.json';\n\nimport marie from './assets/marie.png'\n\nimport MessageBar from \"./MessageBar\";\nimport ConnectWalletButton from \"./ConnectWalletButton\";\n\nexport default function App() {\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [currentWaveCount, setWaveCount] = useState(\"\");\n  const [allWaves, setAllWaves] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [balance, setBalance] = useState(\"\");\n  const [remainingTokens, setRemaining] = useState(\"\");\n\n  const contractAddress = \"0x8c169E24aC22dCe86492A432Da4f6A16d36C3278\"\n  const contractABI = abi.abi;\n\n  const tokenContractAddress = \"0x7D8f9a89e8fB4bE4e28e692c1725e046D852675F\";\n  const tokenContractABI = tokenAbi.abi;\n\n  const checkIfWalletIsConnected = async () => {\n     try {\n\n      const {ethereum} = window;\n\n      if (!ethereum) {\n        console.log(\"Please install metamask\");\n      } else {\n        console.log(\"Ethereum object detected\");\n      }\n\n      const accounts = await ethereum.request({ method: \"eth_accounts\"});\n\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log(`Authorized account: ${account}`);\n        setCurrentAccount(account);\n\n      } else {\n        console.log(\"No authorized account found\");\n      }\n\n      getTotalWaves();\n      getAllWaves();\n      getTokenBalance(currentAccount);\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\nconst connectWallet = async () => {\n    try {\n      const {ethereum} = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask\");\n        return;\n      }\n\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\"});\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\nconst getTotalWaves = async () => {\n  try{\n    const {ethereum} = window;\n\n    if(ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const wavePortalContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n      let count = await wavePortalContract.getTotalWaves();\n      console.log(\"Retrieved total wave count...:\", count.toNumber());\n      setWaveCount(count.toNumber());\n\n    } else {\n      console.log(\"Ethereum object doesn't exist!\");\n    }\n  } catch(error) {\n    console.log(error);\n  }\n}\n\nconst getAllWaves = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const wavePortalContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        const waves = await wavePortalContract.getAllWaves();\n\n        const wavesCleaned = waves.map((wave) => {\n          return {\n            address: wave.waver,\n            timestamp: new Date(wave.timestamp * 1000),\n            message: wave.message,\n          }\n        });\n\n        setAllWaves(wavesCleaned);\n      } else {\n        console.log(\"Ethereum object doesn't exist!\")\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getTokenBalance = async(addy) => {\n    try{\n      const {ethereum} = window;\n\n      if(ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const tokenContract = new ethers.Contract(tokenContractAddress, tokenContractABI, signer);\n\n        const accounts = await ethereum.request({ method: \"eth_accounts\"});\n        console.log(accounts);\n\n        let _balance = await tokenContract.balanceOf(accounts[0]);\n        _balance = await ethers.utils.formatEther(_balance);\n        setBalance(_balance);\n\n        const remainingAddress = \"0x1ea99548881A770BfEF0E8F544ccF64872095628\"\n        let _remainingBalance = await tokenContract.balanceOf(remainingAddress)\n        _remainingBalance = await ethers.utils.formatEther(_remainingBalance);\n        setRemaining(_remainingBalance);\n      } else {\n        console.log(\"Ethereum object does not exist!\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const wave = async () => {\n    try{\n      const {ethereum} = window;\n\n      if(ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const wavePortalContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        let count = await wavePortalContract.getTotalWaves();\n\n        const waveTxn = await wavePortalContract.wave(message, { gasLimit: 300000});\n        console.log(\"Mining...\", waveTxn.hash);\n\n        await waveTxn.wait();\n        console.log(\"Mined...\", waveTxn.hash);\n\n        count = await wavePortalContract.getTotalWaves();\n        console.log(\"Retrieved total wave count...\", count.toNumber());\n        setWaveCount(count.toNumber());\n\n        getAllWaves();\n\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch(error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  }\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  return (\n    <div className=\"mainContainer\">\n      <div className=\"dataContainer\">\n        <div style={{ backgroundColor: \"Pink\", marginTop: \"16px\", marginBottom: \"16px\", padding: \"10px\", \"text-align\": \"center\", }}>\n        PLEASE ONLY INTERACT WITH RINKEBY TESTNET\n        </div>\n        <div className=\"header\">\n        Give Marie a 👋 and get 1 MARI\n        </div>\n        <div className=\"bio\">\n        Remaining MARI for Claim: {remainingTokens}\n        </div>\n\n        <div className=\"bio\">\n        MARI token contract: {tokenContractAddress}\n        </div>\n\n        <ConnectWalletButton currentAccount = {currentAccount} connectWallet = {connectWallet}/>\n\n        <MessageBar handleChange = {handleChange}/>\n\n        <button className=\"waveButton\" onClick={wave}>\n          Wave to Marie\n        </button>\n\n        <div className=\"bio\">\n          Number Of Waves: {currentWaveCount}\n        </div>\n        <div className=\"bio\">\n          Your MARI balance : {balance} <img className=\"pic\" src={marie} alt=''/>\n        </div>\n        <div>\n          {allWaves.map((wave, index) => {\n          return (\n            <div key={index} style={{ backgroundColor: \"OldLace\", marginTop: \"16px\", padding: \"8px\" }}>\n              <div>Address: {wave.address}</div>\n              <div>Time: {wave.timestamp.toString()}</div>\n              <div>Message: {wave.message}</div>\n            </div>\n            );\n        })}\n        </div>\n\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}